name: Wheels

on:
  push:
    branches:
      - master
      - stable
      - docs
      - actions*
    tags:
      - v*
  workflow_dispatch:

jobs:
  sdist:
    name: Source distribution
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/docs') != true

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v1.11

      - name: Install requirements
        run: |
          pip install --user twine build

      - name: Build sdist
        run: |
          python -m build --sdist --outdir wheelhouse

      - name: Install from sdist
        run: |
          pip install --user wheelhouse/*.tar.gz

      - name: Check sdist
        run: |
          python -m twine check wheelhouse/*

      - name: Upload sdist
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: wheelhouse/*.tar.gz

  wheels:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [x64]

    name: Wheels • Python ${{ matrix.python-version }} • ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{matrix.python-version}}

      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v1.11

      - name: Install requirements
        run: |
          pip install --user twine build

      - name: Build wheel
        run: |
          python -m build --wheel --outdir wheelhouse

      - name: Install from wheel (excl. Windows)
        if: matrix.os != 'windows-latest'
        run: |
          pip install --user wheelhouse/*.whl

      - name: Check wheel (excl. Windows)
        if: matrix.os != 'windows-latest'
        run: |
          python -m twine check wheelhouse/*

      - name: Upload built wheels
        if: startsWith(github.ref, 'refs/heads/docs') != true
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: wheelhouse/pybind_example-*.whl
          if-no-files-found: error

      # - name: Upload wheel for ReadTheDocs
      #   if: runner.os == 'Linux' && matrix.cibw-arch == 'manylinux_x86_64' && startsWith(github.ref, 'refs/heads/') && !startsWith(github.ref, 'refs/heads/actions')
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: rtd-wheel
      #     path: wheelhouse/praat_parselmouth-*-cp37-cp37m-manylinux2010_x86_64.whl
      #     if-no-files-found: error

  # trigger_rtd:
  #   name: Trigger ReadTheDocs build
  #   runs-on: ubuntu-latest
  #   if: startsWith(github.ref, 'refs/heads/') && !startsWith(github.ref, 'refs/heads/actions')
  #   needs: [wheels]

  #   steps:
  #     - name: Get branch name
  #       id: get_branch
  #       run: |
  #         echo "::set-output name=branch::${GITHUB_REF##refs/heads/}"

  #     - name: Trigger ReadTheDocs webhook
  #       run: |
  #         curl -X POST -d "branches=${{ steps.get_branch.outputs.branch }}" -d "token=${{ secrets.READTHEDOCS_WEBHOOK_TOKEN }}" https://readthedocs.org/api/v2/webhook/parselmouth/15985/

  create_release:
    name: Create release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [sdist, wheels]

    steps:
      - name: Collect sdist and wheels
        uses: actions/download-artifact@v2
        with:
          name: wheels
          path: wheelhouse

      - name: Get release name
        id: get_version
        run: |
          echo "::set-output name=version::${GITHUB_REF##refs/tags/v}"

      - name: Upload sdist and wheels to release
        uses: ncipollo/release-action@v1
        with:
          name: ${{ steps.get_version.outputs.version }}
          draft: true
          artifacts: wheelhouse/*
          token: ${{ secrets.GITHUB_TOKEN }}
